const nodemailer = require('nodemailer');

class EmailService {
  constructor() {
    this.transporter = null;
    this.initializeTransporter();
  }

  initializeTransporter() {
    try {
      // Prefer configured SMTP (e.g., Gmail) whenever credentials are present
      if (process.env.EMAIL_USER && process.env.EMAIL_PASSWORD) {
        const useGmail = (process.env.EMAIL_SERVICE || 'gmail').toLowerCase() === 'gmail';
        this.transporter = nodemailer.createTransport(
          useGmail
            ? {
                host: 'smtp.gmail.com',
                port: 465,
                secure: true,
                auth: {
                  user: process.env.EMAIL_USER,
                  pass: process.env.EMAIL_PASSWORD
                }
              }
            : {
                service: process.env.EMAIL_SERVICE,
                auth: {
                  user: process.env.EMAIL_USER,
                  pass: process.env.EMAIL_PASSWORD
                }
              }
        );
        console.log(`‚úÖ Email transporter initialized with ${useGmail ? 'Gmail' : process.env.EMAIL_SERVICE}`);
      } else {
        // Fallback to Ethereal for development testing
        this.transporter = nodemailer.createTransport({
          host: 'smtp.ethereal.email',
          port: 587,
          secure: false,
          auth: {
            user: process.env.ETHEREAL_USER || 'test@ethereal.email',
            pass: process.env.ETHEREAL_PASS || 'test123'
          }
        });
        console.log('‚ö†Ô∏è Using Ethereal email for development (no Gmail credentials found)');
      }
    } catch (error) {
      console.error('‚ùå Email transporter initialization error:', error);
    }
  }

  // Verify transporter configuration
  async verifyTransporter() {
    if (!this.transporter) {
      console.warn('‚ö†Ô∏è Email transporter not configured');
      return false;
    }

    try {
      await this.transporter.verify();
      console.log('‚úÖ Email transporter verified successfully');
      return true;
    } catch (error) {
      console.error('‚ùå Email transporter verification failed:', error);
      return false;
    }
  }

  // Test email functionality
  async testEmail(toEmail = 'test@example.com') {
    try {
      if (!this.transporter) {
        return {
          success: false,
          error: 'Email transporter not configured'
        };
      }

      const testMailOptions = {
        from: process.env.EMAIL_FROM || process.env.EMAIL_USER || 'noreply@pranimitra.com',
        to: toEmail,
        subject: 'Prani Mitra - Email Service Test',
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
            <h2 style="color: #4CAF50;">‚úÖ Email Service Test Successful!</h2>
            <p>This is a test email to verify that the Prani Mitra email service is working correctly.</p>
            <p><strong>Timestamp:</strong> ${new Date().toLocaleString()}</p>
            <p><strong>Environment:</strong> ${process.env.NODE_ENV || 'development'}</p>
          </div>
        `,
        text: 'Email Service Test Successful! This is a test email to verify that the Prani Mitra email service is working correctly.'
      };

      const result = await this.transporter.sendMail(testMailOptions);
      
      console.log(`‚úÖ Test email sent successfully: ${result.messageId}`);
      
      return {
        success: true,
        messageId: result.messageId,
        email: toEmail
      };

    } catch (error) {
      console.error('‚ùå Test email error:', error);
      return {
        success: false,
        error: error.message
      };
    }
  }

  // Send welcome email
  async sendWelcomeEmail(userData) {
    try {
      const { name, email, phoneNumber, preferredLanguage = 'english' } = userData;

      if (!email) {
        console.log('No email provided for welcome email');
        return { success: false, message: 'No email address provided' };
      }

      const emailContent = this.generateWelcomeEmailContent(name, preferredLanguage);

      // Optional inline banner image (CID) if a local path is provided
      const attachments = [];
      if (process.env.WELCOME_BANNER_PATH) {
        attachments.push({
          filename: 'welcome-banner',
          path: process.env.WELCOME_BANNER_PATH,
          cid: 'welcomeBanner'
        });
      }

      const mailOptions = {
        from: process.env.EMAIL_FROM || process.env.EMAIL_USER || 'noreply@pranimitra.com',
        to: email,
        subject: emailContent.subject,
        html: emailContent.html,
        text: emailContent.text
      };

      if (attachments.length > 0) {
        mailOptions.attachments = attachments;
      }

      const result = await this.transporter.sendMail(mailOptions);
      
      console.log(`‚úÖ Welcome email sent to ${email}: ${result.messageId}`);
      
      return {
        success: true,
        messageId: result.messageId,
        email: email
      };

    } catch (error) {
      console.error('Send welcome email error:', error);
      return {
        success: false,
        error: error.message
      };
    }
  }

  // Generate welcome email content
  generateWelcomeEmailContent(name, language = 'english') {
    const startupName = process.env.STARTUP_NAME || 'Prani Mitra';
    const tollFree = process.env.TOLL_FREE_NUMBER || '04041893203';
    const website = process.env.WEBSITE_URL || process.env.FRONTEND_URL || 'https://prani-mitra1.vercel.app';
    const bannerHTML = process.env.WELCOME_BANNER_PATH
      ? '<img src="cid:welcomeBanner" alt="Welcome banner" style="width:100%;max-width:100%;display:block;border-radius:8px;margin-bottom:16px;" />'
      : '';

    const templates = {
      english: {
        subject: `üåæ Welcome to ${startupName} ‚Äì Your Farming Assistant in Your Language!`,
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 640px; margin: 0 auto; padding: 24px; background: #ffffff;">
            ${bannerHTML}
            <h2 style="margin: 0 0 16px; color: #2e7d32;">Namaskaram ${name},</h2>
            <p style="color: #444; line-height: 1.7; margin: 0 0 16px;">
              Welcome to <strong>${startupName}</strong> ‚Äì your trusted voice-based farming helpdesk! We‚Äôre here to answer your farming questions, give you updates, and connect you to important schemes in your own language.
            </p>

            <h3 style="color: #1b5e20; margin: 24px 0 12px;">üìû How it works:</h3>
            <ol style="color: #444; line-height: 1.8; padding-left: 20px; margin: 0 0 8px;">
              <li>Call our toll-free number: <strong>${tollFree}</strong></li>
              <li>Select your language (‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å / ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä / English)</li>
              <li>Choose a service:</li>
            </ol>
            <ul style="color: #444; line-height: 1.8; margin: 8px 0 16px; padding-left: 20px;">
              <li>üå± Crop Care advice</li>
              <li>üêÑ Livestock help</li>
              <li>‚òÄÔ∏è Weather updates</li>
              <li>üèõ Government schemes</li>
            </ul>

            <p style="color: #444; line-height: 1.7; margin: 16px 0;">
              üí° No internet needed. Just call and get instant answers from our AI-powered assistant, available 24/7.
            </p>

            <p style="color: #444; line-height: 1.7; margin: 16px 0;">
              We‚Äôre excited to support you in growing healthier crops, caring for your livestock, and staying informed.
            </p>

            <p style="color: #2e7d32; font-weight: bold; margin: 24px 0 8px;">Happy Farming,</p>
            <p style="color: #444; margin: 0 0 4px;">Team ${startupName}</p>
            <p style="color: #444; margin: 0 0 4px;">üìû Helpline: ${tollFree}</p>
            <p style="color: #444; margin: 0;">üåê Website: <a href="${website}" style="color: #2e7d32; text-decoration: none;">${website}</a></p>
          </div>
        `,
        text: `
Namaskaram ${name},

Welcome to ${startupName} ‚Äì your trusted voice-based farming helpdesk! We‚Äôre here to answer your farming questions, give you updates, and connect you to important schemes in your own language.

How it works:
1) Call our toll-free number: ${tollFree}
2) Select your language (‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å / ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä / English)
3) Choose a service:
   - üå± Crop Care advice
   - üêÑ Livestock help
   - ‚òÄÔ∏è Weather updates
   - üèõ Government schemes

No internet needed. Just call and get instant answers from our AI-powered assistant, available 24/7.

We‚Äôre excited to support you in growing healthier crops, caring for your livestock, and staying informed.

Happy Farming,
Team ${startupName}
üìû Helpline: ${tollFree}
üåê Website: ${website}
        `
      },
      hindi: {
        subject: `üåæ ${startupName} ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à ‚Äì ‡§Ü‡§™‡§ï‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§Æ‡•á‡§Ç ‡§ï‡•É‡§∑‡§ø ‡§∏‡§π‡§æ‡§Ø‡§ï!`,
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 640px; margin: 0 auto; padding: 24px; background: #ffffff;">
            ${bannerHTML}
            <h2 style="margin: 0 0 16px; color: #2e7d32;">‡§®‡§Æ‡§∏‡•ç‡§§‡•á ${name},</h2>
            <p style="color: #444; line-height: 1.7; margin: 0 0 16px;">
              <strong>${startupName}</strong> ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à ‚Äì ‡§Ü‡§™‡§ï‡§æ ‡§≠‡§∞‡•ã‡§∏‡•á‡§Æ‡§Ç‡§¶ ‡§µ‡•â‡§á‡§∏-‡§¨‡•á‡§∏‡•ç‡§° ‡§ï‡•É‡§∑‡§ø ‡§π‡•á‡§≤‡•ç‡§™‡§°‡•á‡§∏‡•ç‡§ï! ‡§π‡§Æ ‡§Ü‡§™‡§ï‡•Ä ‡§ñ‡•á‡§§‡•Ä ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§ú‡§µ‡§æ‡§¨, ‡§Ö‡§™‡§°‡•á‡§ü, ‡§î‡§∞ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§Ü‡§™‡§ï‡•Ä ‡§Ö‡§™‡§®‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§Æ‡•á‡§Ç ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§
            </p>

            <h3 style="color: #1b5e20; margin: 24px 0 12px;">üìû ‡§Ø‡§π ‡§ï‡•à‡§∏‡•á ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à:</h3>
            <ol style="color: #444; line-height: 1.8; padding-left: 20px; margin: 0 0 8px;">
              <li>‡§π‡§Æ‡§æ‡§∞‡§æ ‡§ü‡•ã‡§≤-‡§´‡•ç‡§∞‡•Ä ‡§®‡§Ç‡§¨‡§∞ ‡§°‡§æ‡§Ø‡§≤ ‡§ï‡§∞‡•á‡§Ç: <strong>${tollFree}</strong></li>
              <li>‡§≠‡§æ‡§∑‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç (‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å / ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä / English)</li>
              <li>‡§∏‡•á‡§µ‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç:</li>
            </ol>
            <ul style="color: #444; line-height: 1.8; margin: 8px 0 16px; padding-left: 20px;">
              <li>üå± ‡§´‡§∏‡§≤ ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§∏‡§≤‡§æ‡§π</li>
              <li>üêÑ ‡§™‡§∂‡•Å‡§ß‡§® ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ</li>
              <li>‚òÄÔ∏è ‡§Æ‡•å‡§∏‡§Æ ‡§Ö‡§™‡§°‡•á‡§ü</li>
              <li>üèõ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Å</li>
            </ul>

            <p style="color: #444; line-height: 1.7; margin: 16px 0;">
              üí° ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§ï‡•Ä ‡§ú‡§º‡§∞‡•Ç‡§∞‡§§ ‡§®‡§π‡•Ä‡§Ç‡•§ ‡§¨‡§∏ ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•á 24/7 AI ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§∏‡•á ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§ú‡§µ‡§æ‡§¨ ‡§™‡§æ‡§è‡§Ç‡•§
            </p>

            <p style="color: #444; line-height: 1.7; margin: 16px 0;">
              ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§´‡§∏‡§≤‡•ã‡§Ç, ‡§™‡§∂‡•Å‡§ß‡§® ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§î‡§∞ ‡§∏‡§π‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡§Æ ‡§π‡§Æ‡•á‡§∂‡§æ ‡§Ü‡§™‡§ï‡•á ‡§∏‡§æ‡§• ‡§π‡•à‡§Ç‡•§
            </p>

            <p style="color: #2e7d32; font-weight: bold; margin: 24px 0 8px;">‡§∂‡•Å‡§≠ ‡§ñ‡•á‡§§‡•Ä,</p>
            <p style="color: #444; margin: 0 0 4px;">‡§ü‡•Ä‡§Æ ${startupName}</p>
            <p style="color: #444; margin: 0 0 4px;">üìû ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§®: ${tollFree}</p>
            <p style="color: #444; margin: 0;">üåê ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü: <a href="${website}" style="color: #2e7d32; text-decoration: none;">${website}</a></p>
          </div>
        `,
        text: `
‡§®‡§Æ‡§∏‡•ç‡§§‡•á ${name},

${startupName} ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à ‚Äì ‡§Ü‡§™‡§ï‡§æ ‡§≠‡§∞‡•ã‡§∏‡•á‡§Æ‡§Ç‡§¶ ‡§µ‡•â‡§á‡§∏-‡§¨‡•á‡§∏‡•ç‡§° ‡§ï‡•É‡§∑‡§ø ‡§π‡•á‡§≤‡•ç‡§™‡§°‡•á‡§∏‡•ç‡§ï! ‡§π‡§Æ ‡§Ü‡§™‡§ï‡•Ä ‡§ñ‡•á‡§§‡•Ä ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§ú‡§µ‡§æ‡§¨, ‡§Ö‡§™‡§°‡•á‡§ü, ‡§î‡§∞ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§Ü‡§™‡§ï‡•Ä ‡§Ö‡§™‡§®‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§Æ‡•á‡§Ç ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§

‡§Ø‡§π ‡§ï‡•à‡§∏‡•á ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à:
1) ‡§π‡§Æ‡§æ‡§∞‡§æ ‡§ü‡•ã‡§≤-‡§´‡•ç‡§∞‡•Ä ‡§®‡§Ç‡§¨‡§∞ ‡§°‡§æ‡§Ø‡§≤ ‡§ï‡§∞‡•á‡§Ç: ${tollFree}
2) ‡§≠‡§æ‡§∑‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç (‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å / ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä / English)
3) ‡§∏‡•á‡§µ‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç:
   - üå± ‡§´‡§∏‡§≤ ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§∏‡§≤‡§æ‡§π
   - üêÑ ‡§™‡§∂‡•Å‡§ß‡§® ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ
   - ‚òÄÔ∏è ‡§Æ‡•å‡§∏‡§Æ ‡§Ö‡§™‡§°‡•á‡§ü
   - üèõ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Å

üí° ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§ï‡•Ä ‡§ú‡§º‡§∞‡•Ç‡§∞‡§§ ‡§®‡§π‡•Ä‡§Ç‡•§ ‡§¨‡§∏ ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•á 24/7 AI ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§∏‡•á ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§ú‡§µ‡§æ‡§¨ ‡§™‡§æ‡§è‡§Ç‡•§

‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§´‡§∏‡§≤‡•ã‡§Ç, ‡§™‡§∂‡•Å‡§ß‡§® ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§î‡§∞ ‡§∏‡§π‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡§Æ ‡§π‡§Æ‡•á‡§∂‡§æ ‡§Ü‡§™‡§ï‡•á ‡§∏‡§æ‡§• ‡§π‡•à‡§Ç‡•§

‡§∂‡•Å‡§≠ ‡§ñ‡•á‡§§‡•Ä,
‡§ü‡•Ä‡§Æ ${startupName}
üìû ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§®: ${tollFree}
üåê ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü: ${website}
        `
      },
      telugu: {
        subject: `üåæ ${startupName} ‡∞ï‡±Å ‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç ‚Äì ‡∞Æ‡±Ä ‡∞≠‡∞æ‡∞∑‡∞≤‡±ã ‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï‡±Å‡∞°‡±Å!`,
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 640px; margin: 0 auto; padding: 24px; background: #ffffff;">
            ${bannerHTML}
            <h2 style="margin: 0 0 16px; color: #2e7d32;">‡∞®‡∞Æ‡∞∏‡±ç‡∞ï‡∞æ‡∞∞‡∞Ç ${name},</h2>
            <p style="color: #444; line-height: 1.7; margin: 0 0 16px;">
              <strong>${startupName}</strong> ‡∞ï‡±Å ‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç ‚Äì ‡∞Æ‡±Ä ‡∞®‡∞Æ‡±ç‡∞Æ‡∞ï‡∞Æ‡±à‡∞® ‡∞µ‡∞æ‡∞Ø‡∞ø‡∞∏‡±ç-‡∞Ü‡∞ß‡∞æ‡∞∞‡∞ø‡∞§ ‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø ‡∞π‡±Ü‡∞≤‡±ç‡∞™‡±ç‚Äå‡∞°‡±Ü‡∞∏‡±ç‡∞ï‡±ç! ‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®‡∞≤‡∞ï‡±Å ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞æ‡∞≤‡±Å, ‡∞§‡∞æ‡∞ú‡∞æ ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç, ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞™‡±ç‡∞∞‡∞≠‡±Å‡∞§‡±ç‡∞µ ‡∞™‡∞•‡∞ï‡∞æ‡∞≤ ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞Æ‡±Ä ‡∞≠‡∞æ‡∞∑‡∞≤‡±ã‡∞®‡±á ‡∞Ö‡∞Ç‡∞¶‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞Æ‡±Å.
            </p>

            <h3 style="color: #1b5e20; margin: 24px 0 12px;">üìû ‡∞á‡∞¶‡∞ø ‡∞é‡∞≤‡∞æ ‡∞™‡∞®‡∞ø‡∞ö‡±á‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø:</h3>
            <ol style="color: #444; line-height: 1.8; padding-left: 20px; margin: 0 0 8px;">
              <li>‡∞Æ‡∞æ ‡∞ü‡±ã‡∞≤‡±ç-‡∞´‡±ç‡∞∞‡±Ä ‡∞®‡∞Ç‡∞¨‡∞∞‡±ç‚Äå‡∞ï‡±Å ‡∞ï‡∞æ‡∞≤‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø: <strong>${tollFree}</strong></li>
              <li>‡∞Æ‡±Ä ‡∞≠‡∞æ‡∞∑ ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø (‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å / ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä / English)</li>
              <li>‡∞∏‡±á‡∞µ‡∞®‡±Å ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø:</li>
            </ol>
            <ul style="color: #444; line-height: 1.8; margin: 8px 0 16px; padding-left: 20px;">
              <li>üå± ‡∞™‡∞Ç‡∞ü ‡∞∏‡∞Ç‡∞∞‡∞ï‡±ç‡∞∑‡∞£ ‡∞∏‡±Ç‡∞ö‡∞®‡∞≤‡±Å</li>
              <li>üêÑ ‡∞™‡∞∂‡±Å‡∞∏‡∞Ç‡∞µ‡∞∞‡±ç‡∞ß‡∞ï ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç</li>
              <li>‚òÄÔ∏è ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£ ‡∞Ö‡∞™‡±ç‚Äå‡∞°‡±á‡∞ü‡±ç‡∞∏‡±ç</li>
              <li>üèõ ‡∞™‡±ç‡∞∞‡∞≠‡±Å‡∞§‡±ç‡∞µ ‡∞™‡∞•‡∞ï‡∞æ‡∞≤‡±Å</li>
            </ul>

            <p style="color: #444; line-height: 1.7; margin: 16px 0;">
              üí° ‡∞á‡∞Ç‡∞ü‡∞∞‡±ç‡∞®‡±Ü‡∞ü‡±ç ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Ç ‡∞≤‡±á‡∞¶‡±Å. 24/7 ‡∞Ö‡∞Ç‡∞¶‡±Å‡∞¨‡∞æ‡∞ü‡±Å‡∞≤‡±ã ‡∞â‡∞Ç‡∞°‡±á ‡∞Æ‡∞æ AI ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï‡±Å‡∞°‡∞ø ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ ‡∞µ‡±Ü‡∞Ç‡∞ü‡∞®‡±á ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞æ‡∞≤‡±Å ‡∞™‡±ä‡∞Ç‡∞¶‡∞Ç‡∞°‡∞ø.
            </p>

            <p style="color: #444; line-height: 1.7; margin: 16px 0;">
              ‡∞Ü‡∞∞‡±ã‡∞ó‡±ç‡∞Ø‡∞ï‡∞∞‡∞Æ‡±à‡∞® ‡∞™‡∞Ç‡∞ü‡∞≤‡±Å, ‡∞™‡∞∂‡±Å‡∞∏‡∞Ç‡∞∞‡∞ï‡±ç‡∞∑‡∞£ ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∏‡∞∞‡±à‡∞® ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞Æ‡±á‡∞Æ‡±Å ‡∞é‡∞≤‡±ç‡∞≤‡∞™‡±ç‡∞™‡±Å‡∞°‡±Ç ‡∞Æ‡±Ä‡∞§‡±ã ‡∞â‡∞Ç‡∞ü‡∞æ‡∞Æ‡±Å.
            </p>

            <p style="color: #2e7d32; font-weight: bold; margin: 24px 0 8px;">‡∞∂‡±Å‡∞≠ ‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø‡∞Ç,</p>
            <p style="color: #444; margin: 0 0 4px;">Team ${startupName}</p>
            <p style="color: #444; margin: 0 0 4px;">üìû ‡∞π‡±Ü‡∞≤‡±ç‡∞™‡±ç‚Äå‡∞≤‡±à‡∞®‡±ç: ${tollFree}</p>
            <p style="color: #444; margin: 0;">üåê ‡∞µ‡±Ü‡∞¨‡±ç‚Äå‡∞∏‡±à‡∞ü‡±ç: <a href="${website}" style="color: #2e7d32; text-decoration: none;">${website}</a></p>
          </div>
        `,
        text: `
‡∞®‡∞Æ‡∞∏‡±ç‡∞ï‡∞æ‡∞∞‡∞Ç ${name},

${startupName} ‡∞ï‡±Å ‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç ‚Äì ‡∞Æ‡±Ä ‡∞®‡∞Æ‡±ç‡∞Æ‡∞ï‡∞Æ‡±à‡∞® ‡∞µ‡∞æ‡∞Ø‡∞ø‡∞∏‡±ç-‡∞Ü‡∞ß‡∞æ‡∞∞‡∞ø‡∞§ ‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø ‡∞π‡±Ü‡∞≤‡±ç‡∞™‡±ç‚Äå‡∞°‡±Ü‡∞∏‡±ç‡∞ï‡±ç! ‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®‡∞≤‡∞ï‡±Å ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞æ‡∞≤‡±Å, ‡∞§‡∞æ‡∞ú‡∞æ ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç, ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞™‡±ç‡∞∞‡∞≠‡±Å‡∞§‡±ç‡∞µ ‡∞™‡∞•‡∞ï‡∞æ‡∞≤ ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞Æ‡±Ä ‡∞≠‡∞æ‡∞∑‡∞≤‡±ã‡∞®‡±á ‡∞Ö‡∞Ç‡∞¶‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞Æ‡±Å.

‡∞á‡∞¶‡∞ø ‡∞é‡∞≤‡∞æ ‡∞™‡∞®‡∞ø‡∞ö‡±á‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø:
1) ‡∞Æ‡∞æ ‡∞ü‡±ã‡∞≤‡±ç-‡∞´‡±ç‡∞∞‡±Ä ‡∞®‡∞Ç‡∞¨‡∞∞‡±ç‚Äå‡∞ï‡±Å ‡∞ï‡∞æ‡∞≤‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø: ${tollFree}
2) ‡∞Æ‡±Ä ‡∞≠‡∞æ‡∞∑ ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø (‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å / ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä / English)
3) ‡∞∏‡±á‡∞µ‡∞®‡±Å ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø:
   - üå± ‡∞™‡∞Ç‡∞ü ‡∞∏‡∞Ç‡∞∞‡∞ï‡±ç‡∞∑‡∞£ ‡∞∏‡±Ç‡∞ö‡∞®‡∞≤‡±Å
   - üêÑ ‡∞™‡∞∂‡±Å‡∞∏‡∞Ç‡∞µ‡∞∞‡±ç‡∞ß‡∞ï ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç
   - ‚òÄÔ∏è ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£ ‡∞Ö‡∞™‡±ç‚Äå‡∞°‡±á‡∞ü‡±ç‡∞∏‡±ç
   - üèõ ‡∞™‡±ç‡∞∞‡∞≠‡±Å‡∞§‡±ç‡∞µ ‡∞™‡∞•‡∞ï‡∞æ‡∞≤‡±Å

üí° ‡∞á‡∞Ç‡∞ü‡∞∞‡±ç‡∞®‡±Ü‡∞ü‡±ç ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Ç ‡∞≤‡±á‡∞¶‡±Å. 24/7 ‡∞Ö‡∞Ç‡∞¶‡±Å‡∞¨‡∞æ‡∞ü‡±Å‡∞≤‡±ã ‡∞â‡∞Ç‡∞°‡±á ‡∞Æ‡∞æ AI ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï‡±Å‡∞°‡∞ø ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ ‡∞µ‡±Ü‡∞Ç‡∞ü‡∞®‡±á ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞æ‡∞≤‡±Å ‡∞™‡±ä‡∞Ç‡∞¶‡∞Ç‡∞°‡∞ø.

‡∞Ü‡∞∞‡±ã‡∞ó‡±ç‡∞Ø‡∞ï‡∞∞‡∞Æ‡±à‡∞® ‡∞™‡∞Ç‡∞ü‡∞≤‡±Å, ‡∞™‡∞∂‡±Å‡∞∏‡∞Ç‡∞∞‡∞ï‡±ç‡∞∑‡∞£ ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∏‡∞∞‡±à‡∞® ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞Æ‡±á‡∞Æ‡±Å ‡∞é‡∞≤‡±ç‡∞≤‡∞™‡±ç‡∞™‡±Å‡∞°‡±Ç ‡∞Æ‡±Ä‡∞§‡±ã ‡∞â‡∞Ç‡∞ü‡∞æ‡∞Æ‡±Å.

‡∞∂‡±Å‡∞≠ ‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø‡∞Ç,
Team ${startupName}
üìû ‡∞π‡±Ü‡∞≤‡±ç‡∞™‡±ç‚Äå‡∞≤‡±à‡∞®‡±ç: ${tollFree}
üåê ‡∞µ‡±Ü‡∞¨‡±ç‚Äå‡∞∏‡±à‡∞ü‡±ç: ${website}
        `
      }
    };

    return templates[language] || templates.english;
  }
}

module.exports = new EmailService();
